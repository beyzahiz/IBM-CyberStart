Tek Sorumluluk İlkesi (Single-responsibility principle):
Bir sınıfın veya fonksiyonun yalnızca tek bir sorumluluğu olması gerektiğini belirtir. 
Yani, bir sınıf veya fonksiyon sadece tek bir işlemi gerçekleştirmeli ve bu işlemi en iyi şekilde yapmalıdır.
Tek Sorumluluk İlkesini uygulamak, kodun anlaşılırlığını ve bakımını kolaylaştırır. 
Kodda bir değişiklik yapılması gerektiğinde, bu değişikliğin etkisi minimize olur çünkü her fonksiyon veya sınıf yalnızca belirli bir işlevi yerine getirir. 
Kodun test edilebilirliğini de artırır çünkü her bir işlev ayrı ayrı test edilebilir.

Örnek: 
Bir kullanıcının yaptığı işlemleri log kaydına almayı ve ayrıca bu işlemler sonucunda elde edilen toplam miktarı hesaplamayı düşünelim. 
Bu işlemler, ilk bakışta aynı fonksiyonda yapılabilir gibi görünebilir. 
Ancak Tek Sorumluluk İlkesini dikkate alırsak, her bir işlemi ayrı bir fonksiyon olarak tasarlamak daha uygundur.

// Toplama işlemi fonksiyonu
int toplama(int sayi1, int sayi2) {
    return sayi1 + sayi2;
}
// Log kaydı fonksiyonu
void logKaydi(int sayi1, int sayi2, int sonuc) {
    printf("%d + %d = %d işlemi yapıldı.\n", sayi1, sayi2, sonuc);
}
int main() {
    int sayi1 = 5, sayi2 = 7;
    int sonuc = toplama(sayi1, sayi2);
    logKaydi(sayi1, sayi2, sonuc);
    return 0;
}

Bu örnekte toplama fonksiyonu sadece toplama işleminden, logKaydi fonksiyonu ise sadece log kaydı oluşturmaktan sorumludur. 
Bu şekilde her bir fonksiyon kendi sorumluluğunu en iyi şekilde yerine getirir.

